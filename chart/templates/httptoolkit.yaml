{{ if .Values.httptoolkit.enable }}
apiVersion: apps/v1
kind: {{ if .Values.topology.proxyPerNode }}DaemonSet{{ else }}Deployment{{ end }}
metadata:
  namespace: {{ .Release.Name }}
  name: httptoolkit
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: httptoolkit
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: httptoolkit
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: httptoolkit
    spec:
      containers:
      - name: httptoolkit
        image: {{ .Values.httptoolkit.image }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: httptoolkit
  name: httptoolkit
  namespace: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: httptoolkit
{{ if .Values.topology.useTopologyKeys }}
  topologyKeys:
    - "kubernetes.io/hostname"
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: httptoolkit
  name: httptoolkit-proxy
  namespace: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: httptoolkit
{{ if .Values.topology.useTopologyKeys }}
  topologyKeys:
    - "kubernetes.io/hostname"
{{ end }}
{{ if .Values.httptoolkit.ingress.enable }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httptoolkit
  annotations:
    kubernetes.io/ingress.class: nodejs
    cert-manager.io/cluster-issuer: letsencrypt-production
    cert-manager.io/acme-challenge-type: http01
    oidc.api.k8s.dma.net.nz/requireAuth: "true"
spec:
  rules:
  - host: {{ .Values.httptoolkit.ingress.hostname | quote }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: httptoolkit
            port:
              number: 80
  tls:
    - hosts:
        - {{ .Values.httptoolkit.ingress.hostname | quote }}
      secretName: httptoolkit-cert
{{ end }}
{{ end }}